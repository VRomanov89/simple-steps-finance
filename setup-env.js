#!/usr/bin/env node

const fs = require('fs');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

console.log('üöÄ SimpleStepsFinance Environment Setup\n');
console.log('This script will help you create your .env.local file with all required environment variables.\n');

const envVars = {};

const questions = [
  {
    key: 'NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY',
    prompt: 'üìù Enter your Clerk Publishable Key (pk_test_...): ',
    description: 'Found in Clerk Dashboard ‚Üí API Keys'
  },
  {
    key: 'CLERK_SECRET_KEY',
    prompt: 'üîê Enter your Clerk Secret Key (sk_test_...): ',
    description: 'Found in Clerk Dashboard ‚Üí API Keys'
  },
  {
    key: 'CLERK_WEBHOOK_SECRET',
    prompt: 'üîó Enter your Clerk Webhook Secret (whsec_...): ',
    description: 'Found in Clerk Dashboard ‚Üí Webhooks (create webhook first)'
  },
  {
    key: 'NEXT_PUBLIC_SUPABASE_URL',
    prompt: 'üóÑÔ∏è Enter your Supabase URL (https://...supabase.co): ',
    description: 'Found in Supabase Dashboard ‚Üí Settings ‚Üí API'
  },
  {
    key: 'NEXT_PUBLIC_SUPABASE_ANON_KEY',
    prompt: 'üîë Enter your Supabase Anon Key (eyJhbG...): ',
    description: 'Found in Supabase Dashboard ‚Üí Settings ‚Üí API'
  },
  {
    key: 'SUPABASE_SERVICE_ROLE_KEY',
    prompt: 'üîí Enter your Supabase Service Role Key (eyJhbG...): ',
    description: 'Found in Supabase Dashboard ‚Üí Settings ‚Üí API (keep secret!)'
  },
  {
    key: 'NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY',
    prompt: 'üí≥ Enter your Stripe Publishable Key (pk_test_...): ',
    description: 'Found in Stripe Dashboard ‚Üí Developers ‚Üí API Keys'
  },
  {
    key: 'STRIPE_SECRET_KEY',
    prompt: 'üîê Enter your Stripe Secret Key (sk_test_...): ',
    description: 'Found in Stripe Dashboard ‚Üí Developers ‚Üí API Keys'
  },
  {
    key: 'NEXT_PUBLIC_STRIPE_MONTHLY_PRICE_ID',
    prompt: 'üìÖ Enter your Stripe Monthly Price ID (price_...): ',
    description: 'Create in Stripe Dashboard ‚Üí Products ($9/month)'
  },
  {
    key: 'NEXT_PUBLIC_STRIPE_YEARLY_PRICE_ID',
    prompt: 'üìÜ Enter your Stripe Yearly Price ID (price_...): ',
    description: 'Create in Stripe Dashboard ‚Üí Products ($90/year)'
  },
  {
    key: 'STRIPE_WEBHOOK_SECRET',
    prompt: 'üîó Enter your Stripe Webhook Secret (whsec_...): ',
    description: 'Found in Stripe Dashboard ‚Üí Developers ‚Üí Webhooks (optional for now)'
  },
  {
    key: 'RESEND_API_KEY',
    prompt: 'üìß Enter your Resend API Key (re_...): ',
    description: 'Found in Resend Dashboard ‚Üí API Keys'
  },
  {
    key: 'NEXT_PUBLIC_APP_URL',
    prompt: 'üåê Enter your app URL (http://localhost:3000 for dev): ',
    description: 'Use http://localhost:3000 for development',
    default: 'http://localhost:3000'
  }
];

async function askQuestion(question) {
  return new Promise((resolve) => {
    console.log(`\n${question.description}`);
    const prompt = question.default ? 
      `${question.prompt}[${question.default}] ` : 
      question.prompt;
    
    rl.question(prompt, (answer) => {
      resolve(answer.trim() || question.default || '');
    });
  });
}

async function main() {
  try {
    for (const question of questions) {
      const answer = await askQuestion(question);
      envVars[question.key] = answer;
    }

    // Generate .env.local content
    let envContent = '# SimpleStepsFinance Environment Variables\n';
    envContent += '# Generated by setup script\n\n';

    envContent += '# Clerk Authentication\n';
    envContent += `NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${envVars.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}\n`;
    envContent += `CLERK_SECRET_KEY=${envVars.CLERK_SECRET_KEY}\n`;
    envContent += `CLERK_WEBHOOK_SECRET=${envVars.CLERK_WEBHOOK_SECRET}\n`;
    envContent += 'NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in\n';
    envContent += 'NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up\n\n';

    envContent += '# Supabase\n';
    envContent += `NEXT_PUBLIC_SUPABASE_URL=${envVars.NEXT_PUBLIC_SUPABASE_URL}\n`;
    envContent += `NEXT_PUBLIC_SUPABASE_ANON_KEY=${envVars.NEXT_PUBLIC_SUPABASE_ANON_KEY}\n`;
    envContent += `SUPABASE_SERVICE_ROLE_KEY=${envVars.SUPABASE_SERVICE_ROLE_KEY}\n\n`;

    envContent += '# Stripe\n';
    envContent += `NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${envVars.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}\n`;
    envContent += `STRIPE_SECRET_KEY=${envVars.STRIPE_SECRET_KEY}\n`;
    envContent += `NEXT_PUBLIC_STRIPE_MONTHLY_PRICE_ID=${envVars.NEXT_PUBLIC_STRIPE_MONTHLY_PRICE_ID}\n`;
    envContent += `NEXT_PUBLIC_STRIPE_YEARLY_PRICE_ID=${envVars.NEXT_PUBLIC_STRIPE_YEARLY_PRICE_ID}\n`;
    envContent += `STRIPE_WEBHOOK_SECRET=${envVars.STRIPE_WEBHOOK_SECRET}\n\n`;

    envContent += '# Resend\n';
    envContent += `RESEND_API_KEY=${envVars.RESEND_API_KEY}\n\n`;

    envContent += '# App URLs\n';
    envContent += `NEXT_PUBLIC_APP_URL=${envVars.NEXT_PUBLIC_APP_URL}\n`;

    // Write to .env.local
    fs.writeFileSync('.env.local', envContent);

    console.log('\n‚úÖ Environment variables saved to .env.local');
    console.log('\nüéâ Setup complete! Next steps:');
    console.log('1. Run the database migration in Supabase');
    console.log('2. Test your app locally: npm run dev');
    console.log('3. Deploy to Vercel when ready');
    console.log('\nSee DEPLOYMENT.md for detailed instructions.');

  } catch (error) {
    console.error('‚ùå Error during setup:', error.message);
  } finally {
    rl.close();
  }
}

main();